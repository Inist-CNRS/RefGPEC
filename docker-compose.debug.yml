version: '2'

services:

  # RefGPEC frontend (ReactJS app)
  refgpec-front:
    container_name: refgpec-front
    image: nginx:1.13.3
    volumes:
      - ./refgpec-front/nginx.debug.conf:/etc/nginx/conf.d/default.conf
      - ./refgpec-front/logs/:/var/log/nginx
    links:
      - refgpec-front-cra
      - refgpec-api
    ports:
      - 8081:80
    tty: true
    stdin_open: true  # to be able to use CTRL+C to stop the debug

  # same as refgpec-front but run the create-react-bootstrap stuff
  # in debug mode to be able to rebuild things during developement
  refgpec-front-cra:
    container_name: refgpec-front-cra
    image: node:8.7.0
    working_dir: /app
    volumes:
      - ./refgpec-front:/app
    tty: true
    stdin_open: true  # to be able to use CTRL+C to stop the debug
    command: npm run start

  # RefGPEC API (PostgREST API)
  refgpec-api:
    container_name: refgpec-api
    image: postgrest/postgrest:v0.4.3.0
    ports:
      - 3000:3000
    links:
      - refgpec-db:db
    environment:
      PGRST_DB_URI: postgres://refgpec:gpecsecret@refgpec-db:5432/refgpec
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_SERVER_PROXY_URI: http://127.0.0.1:3000/api/

  # RefGPEC database (PostgreSQL database)
  refgpec-db:
    container_name: refgpec-db
    image: postgres:9.6.3
    volumes:
      - ./refgpec-db/data/postgres:/var/lib/postgresql/data
      - ./refgpec-db/sql:/docker-entrypoint-initdb.d/ # to generate automatically table and insert after docker's initialization
    environment:
      POSTGRES_DB: "refgpec"
      POSTGRES_USER: "refgpec"
      POSTGRES_PASSWORD: "gpecsecret"
      PGDATA: "/var/lib/postgresql/data"
    ports:
      - 5432:5432

  # RefGPEC database admin backoffice (pgadmin4)
  refgpec-db-admin:
    container_name: refgpec-db-admin
    image: fenglc/pgadmin4:2.0
    environment:
      DEFAULT_USER: "gpec@inist.fr"
      DEFAULT_PASSWORD: "gpecsecret"
    ports:
      - 5050:5050
    links:
      - refgpec-db

